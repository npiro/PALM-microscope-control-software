function aberrationSimu(obj,event)

figure(1000)

inputPSF = generateGaussianPSF(256,[128 128 128],[128 128 128]);
midSlice = inputPSF{128};

todaysDate=datestr(now,'yyyymmdd');

theFontSize = 16;
theFigure = figure(1000);
set( theFigure,'units','normalized',...
    'toolbar','figure',...
    'position',[0.01 0.01 0.98 0.90],...
    'color',[1 1 1],...
    'name','Aberrated PSF simulation',...
    'CloseRequestFcn' , @closeInterface);

axes_1 = axes('position',[0.3 0.07 0.66 0.48]);
set(axes_1,'NextPlot','replaceChildren','FontSize',theFontSize,'units','normalized');
title('Mask applied')
grid on

% Input PSF controls

% range_slider = uicontrol('style','slider',...
%     'units','normalized',...
%     'position',[0.01 0.80 0.4 0.03],...
%     'BackgroundColor',[1 1 1],...
%     'String','PSF FWHM');
% set( FWHM_slider,'Min',10,'Max',256,'Value',0,'String','0');
% FWHMSlider_listener = addlistener(FWHM_slider,'Action',@chooseAberrationFunction);
% 
% FWHM_slider = uicontrol('style','slider',...
%     'units','normalized',...
%     'position',[0.01 0.80 0.4 0.03],...
%     'BackgroundColor',[1 1 1],...
%     'String','PSF FWHM');
% set( FWHM_slider,'Min',10,'Max',256,'Value',0,'String','0');
% FWHMSlider_listener = addlistener(FWHM_slider,'Action',@chooseAberrationFunction);
% 
% FWHM_slider = uicontrol('style','slider',...
%     'units','normalized',...
%     'position',[0.01 0.80 0.4 0.03],...
%     'BackgroundColor',[1 1 1],...
%     'String','PSF FWHM');
% set( FWHM_slider,'Min',10,'Max',256,'Value',0,'String','0');
% FWHMSlider_listener = addlistener(FWHM_slider,'Action',@chooseAberrationFunction);


% Zernike Mask controls
aberrationChoice_popup = uicontrol('style','popup',...
    'units','normalized',...
    'String','tilt|astigmatism|trefoil|quadrafoil|coma',...
    'position',[0.52 0.01 0.20 0.04],...
    'BackgroundColor',[1 1 1],...
    'FontSize',theFontSize,...
    'Callback',@chooseAberrationFunction);

angle_slider = uicontrol('style','slider',...
    'units','normalized',...
    'position',[0.52 0.0.06 0.4 0.03],...
    'BackgroundColor',[1 1 1],...
    'String','Zernike Mode angle');
set( angle_slider,'Min',-180,'Max',180,'Value',0,'String','0');
angleSlider_listener = addlistener(center_slider,'Action',@chooseAberrationFunction);


force_slider = uicontrol('style','slider',...
    'units','normalized',...
    'position',[0.01 0.80 0.4 0.03],...
    'BackgroundColor',[1 1 1],...
    'String','Zernike Mode amplitude');
set( force_slider,'Min',1,'Max',20,'Value',10,'String','0');
forceSlider_listener = addlistener(force_slider,'Action',@chooseAberrationFunction);

    function chooseAberrationFunction(obj,event)
        choice = get(aberrationChoice_popup,'Value');
        angle_deg = get(angle_slider,'Value');
        force = get(force_slider,'Value');
        mask = getZernMask(choice,256,128,angle_deg,force,'quiet');
        cla(axes_1)
        pcolor
    end

end